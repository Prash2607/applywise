package com.example.myapplication

import android.content.Intent
import android.os.Bundle
import android.widget.Button
import android.widget.EditText
import android.widget.Toast
import androidx.activity.enableEdgeToEdge
import androidx.appcompat.app.AppCompatActivity
import androidx.core.view.ViewCompat
import androidx.core.view.WindowInsetsCompat
import com.google.firebase.firestore.FirebaseFirestore
import com.google.firebase.auth.FirebaseAuth

class new_user : AppCompatActivity() {
    private lateinit var auth: FirebaseAuth
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        enableEdgeToEdge()
        setContentView(R.layout.activity_new_user)

        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main)) { v, insets ->
            val systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars())
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom)
            insets
        }
auth=FirebaseAuth.getInstance()
        // Find UI elements
        val addImage = findViewById<Button>(R.id.ADimg)
        val HPktname = findViewById<EditText>(R.id.tvHPname)
        val HPktstatus = findViewById<EditText>(R.id.tvHPstatus)
        val HPktAge = findViewById<EditText>(R.id.tvHPage)
        val HPktEd = findViewById<EditText>(R.id.etmlHPed)
        val HPktExp = findViewById<EditText>(R.id.etmlHPexp)
        val HPktPhone = findViewById<EditText>(R.id.HPphone)
        val HPktEmail = findViewById<EditText>(R.id.HPemail)
        val HPktpassword = findViewById<EditText>(R.id.HPpassword)
        val saveButton = findViewById<Button>(R.id.HPsave)




        // Navigate to add image activity
        addImage.setOnClickListener {
            val ai = Intent(this, add_img::class.java)
            startActivity(ai)
        }
        // Save user data on button click
        saveButton.setOnClickListener {
            // Retrieve user input

            val usernamer = HPktname.text.toString()
            val userstatus = HPktstatus.text.toString()
            val userage = HPktAge.text.toString()
            val userEd = HPktEd.text.toString()
            val userExp = HPktExp.text.toString()
            val userphone = HPktPhone.text.toString()
            val useremail = HPktEmail.text.toString()
            val userpassword = HPktpassword.text.toString()
            // Validate inputs
            if (usernamer.isEmpty() || userphone.isEmpty() || useremail.isEmpty() || userpassword.isEmpty()) {
                Toast.makeText(this, "Please fill in all required fields!", Toast.LENGTH_SHORT).show()
                return@setOnClickListener
            }

            // Create a Firestore instance
            val db = FirebaseFirestore.getInstance()

            // Create a HashMap for the user data
            val user = hashMapOf(
                "name" to usernamer,
                "status" to userstatus,
                "age" to userage,
                "education" to userEd,
                "experience" to userExp,
                "phone" to userphone,
                "email" to useremail,
                "password" to userpassword


            )
            val user_id = auth.currentUser!!.uid
            val pt = user_id
            // Save the data to Firestore under `users -> basicinfo`
            db.collection("users").document(pt)
                .set(user)
                .addOnSuccessListener {
                    Toast.makeText(this, "User information saved successfully!", Toast.LENGTH_SHORT).show()
                }
                .addOnFailureListener { e ->
                    Toast.makeText(this, "Failed to save user information: ${e.message}", Toast.LENGTH_SHORT).show()
                }
               finish()
        }
    }
}
